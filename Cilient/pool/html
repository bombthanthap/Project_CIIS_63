from django.contrib import messages
from django.http import HttpResponse, HttpResponseRedirect
from django.shortcuts import render,redirect
from django.urls import reverse
from ciis_app.models import *
from ciis_app.resource import DataCIISResource
from tablib.core import Dataset


def author_home(request):
    return render(request,"author_templates/author_home.html")

def author_add_paperid(request):
    data = paperauthor.objects.filter(email_add=request.user)
    return render(request,"author_templates/author_add_paperid.html",{"data":data})   

def author_payment_history(request):
    return render(request,"author_templates/author_payment_history.html")

def author_choose_paper(request):
    data = paperauthor.objects.filter(email_add=request.user)
    #print(data)
    return render(request,"author_templates/author_choose_paper.html",{"data":data})

def author_upload_payment(request):
    return render(request,"author_templates/author_upload_payment.html")

def author_change_status(request):
    return render(request,"author_templates/author_change_status.html")

def author_edit_infomation(request):
    data = CustomUser.objects.get(username=request.user)
    admin_id = data.id
    print(admin_id)
    data2 = Authors.objects.get(admin_id=admin_id)
    print(data2)
    return render(request,"author_templates/author_edit_infomation.html",{"data":data,"data2":data2})

def author_addpaperid_save(request):
    if request.method!="POST":
        return HttpResponse("Method Not Allowed")
    else:
        paperid=request.POST.get("PaperID")
        papertitle=request.POST.get("PaperTitle")
        data=DataCIIS.objects.all()
        user=request.user
        name=paperauthor.objects.values_list('paper_id',flat=True)

        try:
            for i in data:
                if paperid == i.paper_id and papertitle == i.paper_title:
                    if paperid in name:
                        raise ValueError()
                    paper_type=i.paper_type
                    author_name=i.author_name
                    status="Waiting for payment"

                    db=paperauthor(paper_id=paperid,paper_title=papertitle,author_name=author_name,paper_type=paper_type,email_add=user,status=status)
                    db.save()
                    messages.success(request,"Successfully")
                    return HttpResponseRedirect(reverse("author_add_paperid"))
            raise ValueError()

        except ValueError:
            messages.error(request,"This Paper ID can't be added")
            return HttpResponseRedirect(reverse("author_add_paperid"))
        except:
            return HttpResponseRedirect(reverse("author_add_paperid"))


        

                    


            




